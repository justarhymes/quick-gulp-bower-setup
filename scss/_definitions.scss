/*******************
* Variables
*******************/

// colors
// colors go here


// font setting
// font family goes here


// --------------------//
//-- DEFINE MIXINS ----//
//---------------------//

//position
@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);

    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {
      #{$o}: nth($args, $i + 1);
    }
  }

  position: $position;
}

@mixin absolute($args) {
  @include position(absolute, $args);
}

@mixin fixed($args) {
  @include position(fixed, $args);
}

@mixin relative($args) {
  @include position(relative, $args);
}


// prefix
@mixin prefix($property, $value, $vendors: webkit moz ms o) {
  @if $vendors {
    @each $vendor in $vendors {
      #{'-' + $vendor + '-' + $property}: #{$value};
    }
  }
  #{$property}: #{$value};
}

//border radius
@mixin radius($value) {
  @include prefix(border-radius, $value, webkit moz ms o);
}

// Boxshadow
@mixin shadow($value...) {
  @include prefix(box-shadow, $value, webkit moz ms o);
}

// Text shadow
@mixin text-shadow($value) {
  @include prefix(text-shadow, $value, webkit moz ms o);
}

// Transition
@mixin transition($value...) {
  @include prefix(transition, $value, webkit moz ms o);
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


// generic transform
@mixin transform($value) {
  @include prefix(transform, $value, webkit moz ms o);
}

// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// translate
@mixin translate ($x, $y) {
  @include transform(translate($x, $y));
}

// skew
@mixin skew ($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin ($origin) {
  -moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  -ms-transform-origin: $origin;
  -webkit-transform-origin: $origin;
  transform-origin: $origin;
  @include prefix(transform-origin, $origin, webkit moz ms o);
}

// Smoothing
@mixin smooth() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Clearfix
@mixin clearfix() {
  *zoom: 1;

  &:before,
  &:after {
    content: '';
    display: table;
  }

  &:after { clear: both; }
}

// keyframe
@mixin keyframe ($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }

  @-moz-keyframes $animation-name {
    @content;
  }

  @-ms-keyframes $animation-name {
    @content;
  }

  @-o-keyframes $animation-name {
    @content;
  }

  @keyframes $animation-name {
    @content;
  }
}

/*
    Example usage:
    @include animation(10s, 5s, changecolour)
*/
@mixin animation ($delay, $duration, $animation) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}
